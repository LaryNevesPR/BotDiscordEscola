import discord
import json
import os
import random

from JasonManager import Guardar_Users, Ler_Empregos

from discord.ext import commands
os.chdir("D:\Py\BotSharp\BotAlt")

client = commands.Bot(command_prefix="$",  case_insensitive=True)


@client.event
async def on_ready():
    #await Verificar_Users()
    print('Opa! To On!')


@client.command()
async def CriarConta(ctx, arg):
    Users = await Ler_Users()
    if str(ctx.author.id) in Users:
        ocup = Users[str(ctx.author.id)]["ocupa√ß√£o"]
        await ctx.send(f"Voc√™ j√° √© cadastrado nessa escola como {ocup}")
        return
    
    arg = arg.lower()
    if arg == "aluno":
        await Criar_Conta_Aluno(ctx.author)
        await ctx.send("Voc√™ foi cadastrado com sucesso como Aluno")
    elif arg == "professor":
        await Criar_Conta_Professor(ctx.author)
        await ctx.send("Voc√™ foi cadastrado com sucesso como Professor")
    else:
        await ctx.send("O cadastro s√≥ aceita alunos ou professores")


    
    

@client.command(brief='Mostra seu perfil escolar(cria um caso n√£o tenha)', description='Mostra a maioria das informa√ß√µes sobre voc√™ n√° escola. √â o primeiro comando que devo usar!')
async def MPerfil(ctx):

    contacriada = await ContaCriada(ctx.author)
    if contacriada != False:
        return
    

    Users = await Ler_Users()
    ocup = await Verficar_Ocupa√ß√£o(ctx.author)
    if str(ctx.author.id) in Users:
        if ocup == "Aluno":
            user = await Ler_Users()

            reputacao_total = user[str(ctx.author.id)]["reputa√ß√£o"]
            dinheiro_total = user[str(ctx.author.id)]["dinheiro"]
            
            portugues_total= user[str(ctx.author.id)]["notas"]["portugu√™s"]
            matematica_total= user[str(ctx.author.id)]["notas"]["matem√°tica"]
            biologia_total= user[str(ctx.author.id)]["notas"]["biologia"]
            historia_total= user[str(ctx.author.id)]["notas"]["hist√≥ria"]
            fisica_total= user[str(ctx.author.id)]["notas"]["f√≠sica"]
            quimica_total= user[str(ctx.author.id)]["notas"]["qu√≠mica"]
            edfisica_total= user[str(ctx.author.id)]["notas"]["edfisica"]
            geografia_total= user[str(ctx.author.id)]["notas"]["geografia"]

            avatar = ctx.author.avatar_url

            em = discord.Embed(title = f"{ctx.author.name} Perfil", color = discord.Color.blue())
            em.set_author(name = "Perfil Escolar", icon_url='https://cdn-icons-png.flaticon.com/512/167/167707.png')
            em.set_thumbnail(url=avatar)
            em.add_field(name = "Reputa√ß√£oüé≠", value= reputacao_total, inline=True)
            em.add_field(name = "Dinheiroüí∞", value= f"R${dinheiro_total}", inline=True)
            em.add_field(name = "NOTAS:", value= "üìö" ,inline=False)
            em.add_field(name = "Portugu√™s: üìï", value= portugues_total)
            em.add_field(name = "Matem√°tica: üìä", value= matematica_total)
            em.add_field(name = "Biologia: üî¨", value= biologia_total)
            em.add_field(name = "Hist√≥ria: üóø", value= historia_total)
            em.add_field(name = "Fis√≠ca: ‚öó", value= fisica_total)
            em.add_field(name = "Qu√≠mica: üß™", value= quimica_total)
            em.add_field(name = "Educa√ß√£o Fisica: ‚öΩ", value= edfisica_total)
            em.add_field(name = "Geografia: üåç", value= geografia_total)

            await ctx.send(embed = em)

        else: #---------------PROFESSOR

            reputacao_total = Users[str(ctx.author.id)]["reputa√ß√£o"]
            dinheiro_total = Users[str(ctx.author.id)]["dinheiro"]
            #ocupa√ß√£o = Users[str(ctx.author.id)]["ocupa√ß√£o"]
            

            avatar = ctx.author.avatar_url

            em = discord.Embed(title = f"{ctx.author.name} Perfil", color = discord.Color.blue())
            em.set_author(name = "Perfil de Professor", icon_url='https://cdn-icons-png.flaticon.com/512/167/167707.png')
            em.set_thumbnail(url=avatar)
            #em.set_footer(text= f"Perfil de {ocupa√ß√£o}")
            em.add_field(name = "Reputa√ß√£oüé≠", value= reputacao_total, inline=True)
            em.add_field(name = "Dinheiroüí∞", value= f"R${dinheiro_total}", inline=True)

            await ctx.send(embed = em)
    else:
        await ctx.send("Se n√£o tem conta, digite !Escola e crie")




async def Verficar_Ocupa√ß√£o(autor):
    Users= await Ler_Users()
    if Users[str(autor.id)]["ocupa√ß√£o"] == "Aluno":
        return "Aluno"
    else:
        return "Professor"

async def Ler_Users():
    if os.path.exists('UsersData.json'):
        with open('UsersData.json', 'r', encoding='utf-8') as f:
            Users= json.load(f)
    return Users


async def ContaCriada(autor):
    Users= await Ler_Users()
    if not str(autor.id) in Users:
        return True
    else:
        return False

async def Criar_Conta_Professor(autor):
    Users= await Ler_Users()
    if not str(autor.id) in Users:
        print("N√£o est√° na lista")
        Users[autor.id] = {
            "id": autor.id,
            "nome": autor.name,
            "ocupa√ß√£o": "Professor",
            "dinheiro": 0,
            "reputa√ß√£o": 0,
            "estaempregado": True,
            "emprego":{},
            "inventario": {}
            }
        Guardar_Users(Users)
        return True
    else:
        return False

async def Criar_Conta_Aluno(autor):
    Users= await Ler_Users()
    if not str(autor.id) in Users:
        print("N√£o est√° na lista")
        Users[autor.id] = {
            "id": autor.id,
            "nome": autor.name,
            "ocupa√ß√£o": "Aluno",
            "dinheiro": 0,
            "reputa√ß√£o": 0,
            "estaempregado": False,
            "emprego":{},
            "notas": {
                "portugu√™s": 0,
                "matem√°tica": 0,
                "biologia": 0,
                "hist√≥ria": 0,
                "f√≠sica": 0,
                "qu√≠mica":0,
                "geografia": 0,
                "edfisica": 0
            },
            "inventario": {}
            }
        Guardar_Users(Users)
        return True
    else:
        return False



client.run('ODk3NTU5MDA0NzgyMzk5NTE5.YWXa9g.fkAbeN7ZKGBGthS128FfLxnhrqk')